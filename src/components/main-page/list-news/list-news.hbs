<article id="list-news">
    <input type="radio" name="news" id="elem-news-1">
    <input type="radio" name="news" id="elem-news-2">
    <input type="radio" name="news" id="elem-news-3">
    <div class="slide" id="news-1">

        <h2 class="name-information">Information1!</h2>
        <div class="text-information">
            <p class="">Sample setup with Gulp, Babel, Mocha and Webpack over ES6, transpiled to ES5 (source maps
                included).

                All the code, Mocha tests and config files from Gulp and Webpack are ES6.

                The lazy-loadable bundles are automatically generated by webpack and the code is just requiring
                things internally using ES6/CommonJS, making it possible to avoid AMD/RequireJS for asynchronous
                loading.!</p>
        </div>
        <a href="" class="text-information-more">Read more</a>
    </div>
    <div class="slide" id="news-2">

        <h2 class="name-information">Information2!</h2>
        <div class="text-information">
            <p class="">Sample setup with Gulp, Babel, Mocha and Webpack over ES6, transpiled to ES5 (source maps
                included).

                The lazy-loadable bundles are automatically generated by webpack and the code is just requiring
                things internally using ES6/CommonJS, making it possible to avoid AMD/RequireJS for asynchronous
                loading.!</p>
        </div>
        <a href="" class="text-information-more">Read more</a>
    </div>
    <div class="slide" id="news-3">

        <h2 class="name-information">Information3!</h2>
        <div class="text-information">
            <p class="">
                The lazy-loadable bundles are automatically generated by webpack and the code is just requiring
                things internally using ES6/CommonJS, making it possible to avoid AMD/RequireJS for asynchronous
                loading.!</p>
        </div>
        <a href="" class="text-information-more">Read more</a>
    </div>

    <div class="nav">
        <label class="dots" id="dot-1" for="elem-news-1"></label>
        <label class="dots" id="dot-2" for="elem-news-2"></label>
        <label class="dots" id="dot-3" for="elem-news-3"></label>
    </div>
</article>